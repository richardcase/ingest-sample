// Code generated by protoc-gen-go. DO NOT EDIT.
// source: person-service.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Person struct {
	Pid                  int64                `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	MobileNumber         string               `protobuf:"bytes,4,opt,name=mobile_number,json=mobileNumber,proto3" json:"mobile_number,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f8c7fe1d89ad291, []int{0}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Person) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *Person) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Person) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

type PersonSummary struct {
	PersonCount          int32    `protobuf:"varint,1,opt,name=person_count,json=personCount,proto3" json:"person_count,omitempty"`
	ElapsedTime          int32    `protobuf:"varint,2,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonSummary) Reset()         { *m = PersonSummary{} }
func (m *PersonSummary) String() string { return proto.CompactTextString(m) }
func (*PersonSummary) ProtoMessage()    {}
func (*PersonSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f8c7fe1d89ad291, []int{1}
}

func (m *PersonSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonSummary.Unmarshal(m, b)
}
func (m *PersonSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonSummary.Marshal(b, m, deterministic)
}
func (m *PersonSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonSummary.Merge(m, src)
}
func (m *PersonSummary) XXX_Size() int {
	return xxx_messageInfo_PersonSummary.Size(m)
}
func (m *PersonSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonSummary.DiscardUnknown(m)
}

var xxx_messageInfo_PersonSummary proto.InternalMessageInfo

func (m *PersonSummary) GetPersonCount() int32 {
	if m != nil {
		return m.PersonCount
	}
	return 0
}

func (m *PersonSummary) GetElapsedTime() int32 {
	if m != nil {
		return m.ElapsedTime
	}
	return 0
}

type GetPersonRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersonRequest) Reset()         { *m = GetPersonRequest{} }
func (m *GetPersonRequest) String() string { return proto.CompactTextString(m) }
func (*GetPersonRequest) ProtoMessage()    {}
func (*GetPersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f8c7fe1d89ad291, []int{2}
}

func (m *GetPersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPersonRequest.Unmarshal(m, b)
}
func (m *GetPersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPersonRequest.Marshal(b, m, deterministic)
}
func (m *GetPersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersonRequest.Merge(m, src)
}
func (m *GetPersonRequest) XXX_Size() int {
	return xxx_messageInfo_GetPersonRequest.Size(m)
}
func (m *GetPersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersonRequest proto.InternalMessageInfo

func (m *GetPersonRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeletePersonRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePersonRequest) Reset()         { *m = DeletePersonRequest{} }
func (m *DeletePersonRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePersonRequest) ProtoMessage()    {}
func (*DeletePersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f8c7fe1d89ad291, []int{3}
}

func (m *DeletePersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePersonRequest.Unmarshal(m, b)
}
func (m *DeletePersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePersonRequest.Marshal(b, m, deterministic)
}
func (m *DeletePersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePersonRequest.Merge(m, src)
}
func (m *DeletePersonRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePersonRequest.Size(m)
}
func (m *DeletePersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePersonRequest proto.InternalMessageInfo

func (m *DeletePersonRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Person)(nil), "api.Person")
	proto.RegisterType((*PersonSummary)(nil), "api.PersonSummary")
	proto.RegisterType((*GetPersonRequest)(nil), "api.GetPersonRequest")
	proto.RegisterType((*DeletePersonRequest)(nil), "api.DeletePersonRequest")
}

func init() { proto.RegisterFile("person-service.proto", fileDescriptor_5f8c7fe1d89ad291) }

var fileDescriptor_5f8c7fe1d89ad291 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x6b, 0xdb, 0x30,
	0x1c, 0xc5, 0xe3, 0x38, 0x76, 0x98, 0x9c, 0x8c, 0xf0, 0x5f, 0x36, 0x8c, 0x77, 0x58, 0xa6, 0x31,
	0xf0, 0x61, 0x73, 0x20, 0xdb, 0xb1, 0xa7, 0x36, 0x25, 0xf4, 0x52, 0x8a, 0xd3, 0x9e, 0x83, 0x1c,
	0xff, 0x1b, 0x04, 0x96, 0xa5, 0xda, 0x72, 0x21, 0xdf, 0xa9, 0x5f, 0xa7, 0xdf, 0xa7, 0x58, 0x4a,
	0x42, 0x48, 0x4b, 0x7b, 0x93, 0x7e, 0x7a, 0x7f, 0xe9, 0xbd, 0x67, 0x93, 0xb1, 0xc2, 0xaa, 0x96,
	0xe5, 0xdf, 0x1a, 0xab, 0x47, 0xbe, 0xc6, 0x44, 0x55, 0x52, 0x4b, 0x70, 0x99, 0xe2, 0xd1, 0x8f,
	0x8d, 0x94, 0x9b, 0x02, 0xa7, 0x06, 0x65, 0xcd, 0xfd, 0x54, 0x73, 0x81, 0xb5, 0x66, 0x42, 0x59,
	0x55, 0xf4, 0xfd, 0x54, 0x80, 0x42, 0xe9, 0xad, 0x3d, 0xa4, 0xcf, 0x0e, 0xf1, 0x6f, 0xcc, 0xdd,
	0x30, 0x22, 0xae, 0xe2, 0x79, 0xe8, 0x4c, 0x9c, 0xd8, 0x4d, 0xdb, 0x25, 0x00, 0xe9, 0x95, 0x4c,
	0x60, 0xd8, 0x9d, 0x38, 0xf1, 0xa7, 0xd4, 0xac, 0x61, 0x4c, 0x3c, 0x14, 0x8c, 0x17, 0xa1, 0x6b,
	0xa0, 0xdd, 0xc0, 0x2f, 0x32, 0x14, 0x32, 0xe3, 0x05, 0xae, 0xca, 0x46, 0x64, 0x58, 0x85, 0x3d,
	0x73, 0x3a, 0xb0, 0xf0, 0xda, 0x30, 0xf8, 0x4f, 0xfa, 0xeb, 0x0a, 0x99, 0xc6, 0x3c, 0xf4, 0x26,
	0x4e, 0x1c, 0xcc, 0xa2, 0xc4, 0x5a, 0x4b, 0xf6, 0xd6, 0x92, 0xdb, 0xbd, 0xf7, 0x74, 0x2f, 0x6d,
	0xa7, 0x1a, 0x95, 0x9b, 0x29, 0xff, 0xe3, 0xa9, 0x9d, 0x94, 0xde, 0x91, 0xa1, 0x8d, 0xb5, 0x6c,
	0x84, 0x60, 0xd5, 0x16, 0x7e, 0x92, 0x81, 0xed, 0x70, 0xb5, 0x96, 0x4d, 0xa9, 0x4d, 0x4c, 0x2f,
	0x0d, 0x2c, 0xbb, 0x68, 0x51, 0x2b, 0xc1, 0x82, 0xa9, 0x1a, 0xf3, 0x55, 0xdb, 0xa1, 0x89, 0xed,
	0xa5, 0xc1, 0x8e, 0xb5, 0x8f, 0x50, 0x4a, 0x46, 0x0b, 0xd4, 0xf6, 0xe6, 0x14, 0x1f, 0x1a, 0xac,
	0x35, 0x7c, 0x26, 0xdd, 0x43, 0x6d, 0x5d, 0x9e, 0xd3, 0xdf, 0xe4, 0xcb, 0x1c, 0x0b, 0xd4, 0xf8,
	0xae, 0x6c, 0xf6, 0xe4, 0x1c, 0x2c, 0xda, 0x8f, 0x0a, 0x53, 0xd2, 0x5f, 0xa0, 0x3e, 0xdf, 0x5e,
	0xcd, 0xe1, 0x6b, 0xc2, 0x14, 0x4f, 0x4e, 0x9f, 0x8a, 0x02, 0x83, 0x2d, 0xa3, 0x1d, 0xf8, 0x43,
	0xbc, 0xa5, 0x96, 0x15, 0xc2, 0x31, 0x8f, 0xe0, 0x68, 0xb3, 0x4b, 0x4f, 0x3b, 0xb1, 0x03, 0x67,
	0xc4, 0xb7, 0xbe, 0x20, 0x34, 0x8a, 0x37, 0x4c, 0x46, 0xdf, 0x5e, 0x75, 0x7b, 0xd9, 0xfe, 0x2c,
	0xb4, 0x93, 0xf9, 0x86, 0xfc, 0x7b, 0x09, 0x00, 0x00, 0xff, 0xff, 0x44, 0x0c, 0x2b, 0xb2, 0x8a,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonServiceClient is the client API for PersonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonServiceClient interface {
	GetByID(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*Person, error)
	Store(ctx context.Context, opts ...grpc.CallOption) (PersonService_StoreClient, error)
	Delete(ctx context.Context, in *DeletePersonRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type personServiceClient struct {
	cc *grpc.ClientConn
}

func NewPersonServiceClient(cc *grpc.ClientConn) PersonServiceClient {
	return &personServiceClient{cc}
}

func (c *personServiceClient) GetByID(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/api.PersonService/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) Store(ctx context.Context, opts ...grpc.CallOption) (PersonService_StoreClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PersonService_serviceDesc.Streams[0], "/api.PersonService/Store", opts...)
	if err != nil {
		return nil, err
	}
	x := &personServiceStoreClient{stream}
	return x, nil
}

type PersonService_StoreClient interface {
	Send(*Person) error
	CloseAndRecv() (*PersonSummary, error)
	grpc.ClientStream
}

type personServiceStoreClient struct {
	grpc.ClientStream
}

func (x *personServiceStoreClient) Send(m *Person) error {
	return x.ClientStream.SendMsg(m)
}

func (x *personServiceStoreClient) CloseAndRecv() (*PersonSummary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PersonSummary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *personServiceClient) Delete(ctx context.Context, in *DeletePersonRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PersonService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonServiceServer is the server API for PersonService service.
type PersonServiceServer interface {
	GetByID(context.Context, *GetPersonRequest) (*Person, error)
	Store(PersonService_StoreServer) error
	Delete(context.Context, *DeletePersonRequest) (*empty.Empty, error)
}

func RegisterPersonServiceServer(s *grpc.Server, srv PersonServiceServer) {
	s.RegisterService(&_PersonService_serviceDesc, srv)
}

func _PersonService_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PersonService/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).GetByID(ctx, req.(*GetPersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_Store_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PersonServiceServer).Store(&personServiceStoreServer{stream})
}

type PersonService_StoreServer interface {
	SendAndClose(*PersonSummary) error
	Recv() (*Person, error)
	grpc.ServerStream
}

type personServiceStoreServer struct {
	grpc.ServerStream
}

func (x *personServiceStoreServer) SendAndClose(m *PersonSummary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *personServiceStoreServer) Recv() (*Person, error) {
	m := new(Person)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PersonService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PersonService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).Delete(ctx, req.(*DeletePersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PersonService",
	HandlerType: (*PersonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByID",
			Handler:    _PersonService_GetByID_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PersonService_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Store",
			Handler:       _PersonService_Store_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "person-service.proto",
}
